#!/usr/bin/env bash

set -e
set -u 
set -o pipefail

err(){
  printf >&2 "%s\n" "${@}"
}

checkDeps(){
  set +e
  set +u
  dependencies=( kubectl rev awk )
  for cm in ${dependencies[@]}; do
    command -v ${cm} &> /dev/null
    if [[ ${?} -ne 0 ]]; then
      missingDep+="${cm} "
    fi
  done
  if [[ ${#missingDep} -ne 0 ]]; then
    for cm in ${missingDep[@]}; do
      err "You don't have ${cm} on Your machine."
    done
    exit 1
  fi
}
checkDeps
hlp() {
  cat << 'EOF'
Usage: kubectl shell [options]

options:
--namespace || -n <nsName>                  namespace (optional)
--container-name || -c <containerName>      container name (must)
--no-check <yourShellName>                  do not check if container has sh or bash

Notes:
If You don't specify a namespace it will be default namespace of Your current context.

Examples:
kubectl shell -n mynamespace -c mysql
kubectl shell --namespace mynamespace --container-name mysql --no-check bash
EOF
  exit 1 
}


# check if it has enough 
if [[ ${#} -lt 1 ]]; then
  hlp
fi

# parse options
while [[ ${#} -ne 0 ]]; do
  set +e
  set +u
  case ${1} in
    --no-check)
      if [[ ! -z "${2}"  && "${2}" =~ ^[^-] ]]; then
        noCheck=1
        containerShell="${2}"
      else
        err "${2:-empty value} is not a valid for option ${1}"
        exit 1
      fi
      ;;
    -n|--namespace)
      if [[ ! -z "${2}"  && "${2}" =~ ^[^-] ]]; then
        namespace="${2}"
      else
        err "${2:-empty value} is not a valid for option ${1}"
        exit 1
      fi
      ;;
    -c|--container-name)
      if [[ ! -z "${2}"  && "${2}" =~ ^[^-] ]]; then
        containerName="${2}"
      else
        err "${2:-empty value} is not a valid for option ${1}"
        exit 1
      fi
      ;;
    *)
      err "${1} is not a valid option"
      exit 1
      ;;
  esac
  shift 2
done
[[ -z "${containerName}" ]] && hlp
if [[ -z "${noCheck}" ]]; then
  noCheck=0
fi
if [[ -z "${namespace}" ]]; then
  namespace=$(kubectl config get-contexts --no-headers | rev | awk '{print $1}' | rev)
fi
set -e
set -u
# check if pod has sh/bash
checkShell(){
  set +e
  set +u
  local tempLogFile="/tmp/$(echo ${RANDOM}-TEMPlog)"
  containerShell="sh"
  kubectl exec --namespace "${namespace}" -it "${containerName}" -- "${containerShell}" -c 'set -v' &> "${tempLogFile}"
  if [[ ${?} -ne  0 ]]; then
    grep -qP "\Wsh\W" "${tempLogFile}"
    if [[ ${?} -eq 0 ]]; then
      containerShell="bash"
      kubectl exec --namespace "${namespace}" -it "${containerName}" -- "${containerShell}" -c 'set -v' &> "${tempLogFile}"
      if [[ ${?} -ne 0 ]]; then
        grep -qP "\Wbash\W" "${tempLogFile}"
        if [[ ${?} -eq 0 ]]; then
          err "Seems Your container does not have bash or sh. If You are sure It has use --no-check"
          exit 1
        fi
      fi
    fi
  fi
}

if [[ ${noCheck} -eq 1 ]]; then 
  kubectl exec --namespace "${namespace}" -it "${containerName}" -- "${containerShell}"
else
  checkShell
  if [[ ${?} -eq 0 ]]; then
    kubectl exec --namespace "${namespace}" -it "${containerName}" -- "${containerShell}"
  fi
fi
